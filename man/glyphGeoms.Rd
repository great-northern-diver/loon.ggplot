% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-imageGlyph.R, R/geom-pointrangeGlyph.R,
%   R/geom-polygonGlyph.R, R/geom-serialAxesGlyph.R, R/geom-textGlyph.R
\name{geom_imageGlyph}
\alias{geom_imageGlyph}
\alias{geom_pointrangeGlyph}
\alias{glyphGeoms}
\alias{geom_polygonGlyph}
\alias{geom_serialAxesGlyph}
\alias{geom_textGlyph}
\title{Add glyph on scatter plot}
\usage{
geom_imageGlyph(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  images,
  width = 4,
  height = 3,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_pointrangeGlyph(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  ymin,
  ymax,
  linewidth = 1,
  showArea = TRUE,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_polygonGlyph(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  polygon_x,
  polygon_y,
  showArea = TRUE,
  linewidth = 1,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_serialAxesGlyph(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  serialAxesData,
  sequence = NULL,
  linewidth = 1,
  scaling = c("variable", "data", "observation", "none"),
  axesLayout = c("parallel", "radial"),
  showAxes = FALSE,
  showArea = FALSE,
  showEnclosing = FALSE,
  axesColor = "black",
  bboxColor = "black",
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_textGlyph(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  text,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to `layer()`.}

\item{images}{a list of images (a raster object, bitmap image). If not provided, `geom_point()` will be called.}

\item{width}{width of image}

\item{height}{height of image}

\item{na.rm}{If FALSE, the default, missing values are removed with a warning.
If TRUE, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{ymin}{vector with lower y-value of the point range. If not provided, `geom_point()` will be called.}

\item{ymax}{vector with upper y-value of the point range. If not provided, `geom_point()` will be called.}

\item{linewidth}{line width of serial axes plot}

\item{showArea}{boolean to indicate whether area should be shown or not}

\item{polygon_x}{nested list of x-coordinates of polygons, one list element for each scatterplot point.
If not provided, `geom_point()` will be called.}

\item{polygon_y}{nested list of y-coordinates of polygons, one list element for each scatterplot point.
If not provided, `geom_point()` will be called.}

\item{serialAxesData}{a serial axes numerical data set. If not provided, `geom_point()` will be called.}

\item{sequence}{vector with variable names that defines the axes sequence}

\item{scaling}{one of 'variable', 'data', 'observation' or 'none' to
specify how the data is scaled. See Details for more information}

\item{axesLayout}{either "radial" or "parallel"}

\item{showAxes}{boolean to indicate whether axes should be shown or not}

\item{showEnclosing}{boolean to indicate whether enclosing should be shown or not}

\item{axesColor}{axes color}

\item{bboxColor}{bounding box color}

\item{text}{the text strings for each observation.
If the object is a factor then the labels get extracted with \code{\link{as.character}}.}
}
\description{
The glyph geom is used to create scatterplots with a variety glyphs such as polygon glyph, serialaxes glyph, image glyph, point range glyph and text glyph.
}
\details{
\code{geom_pointrangeGlyph()} is very close to \code{\link{geom_pointrange}} but with `loon` API
}
\section{Aesthetics}{

geom_...Glyph() understands the following aesthetics (required aesthetics are in bold):
\itemize{
\item{\strong{x}}
\item{\strong{y}}
\item{alpha}
\item{colour}
\item{fill}
\item{group}
\item{shape}
\item{size}
\item{stroke}
\item{linetype}
}
}

\examples{
# image glyph
if(requireNamespace("png")) {
  img_paths <- list.files(file.path(find.package(package = 'loon'), "images"), full.names = TRUE)
  images <- lapply(img_paths, function(path) png::readPNG(path))
  p <- ggplot(data = data.frame(x = 1:6, y = 1:6),
              mapping = aes(x = x, y = y)) +
         geom_imageGlyph(images = images, alpha = 0.4, width = 2, height = 1.5)
  p
}

# point range glyph
p <- ggplot(data = data.frame(x = 1:3, y = 1:3),
            mapping = aes(x = x, y = y)) +
  geom_pointrangeGlyph(ymin=(1:3)-(1:3)/5, ymax=(1:3)+(1:3)/5)
p
# polygon glyph
p <- ggplot(data = data.frame(x = 1:4, y = 1:4),
            mapping = aes(x = x, y = y)) +
  geom_polygonGlyph(polygon_x = list(x_star, x_cross, x_hexagon, -x_airplane),
                    polygon_y = list(y_star, y_cross, y_hexagon, y_airplane),
                    colour = 'black', fill = 'red')
p
# serial axes glyph
p <- ggplot(data = iris,
            mapping = aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
  geom_serialAxesGlyph(serialAxesData = iris[, -5],
                       axesLayout = "radial")
p
# text glyph
p <- ggplot(data = data.frame(x = 1:26, y = 1:26),
            mapping = aes(x = x, y = y)) +
  geom_textGlyph(text = LETTERS, size = (1:26)/5)
p
}
\seealso{
\link{polygonGlyph}
}
