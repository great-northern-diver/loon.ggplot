% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loon_ggplot.R
\name{loon.ggplot}
\alias{loon.ggplot}
\title{Create a loon plot from a ggplot2 object}
\usage{
loon.ggplot(ggplotObject, ggGuides = FALSE, activeGeomLayers = integer(0),
  tkLabels = TRUE, span = 5, canvasHeight = 850, canvasWidth = 700, ...)
}
\arguments{
\item{ggplotObject}{a ggplot object}

\item{ggGuides}{logical (default \code{FALSE}) to determine whether to draw a ggplot background or not.}

\item{activeGeomLayers}{to determine which geom layer is active. Only `geom_point()` and `geom_histogram()` can be set as active geom layer(s).
(Notice, more than one `geom_point()` layers can be set as active layers, but only one `geom_histogram()` can be set as an active geom layer)}

\item{tkLabels}{logical (default \code{TRUE}) to show tk packing labels or not}

\item{span}{the span of canvas}

\item{canvasHeight}{the height of canvas}

\item{canvasWidth}{the width of canvas}

\item{...}{named arguments to modify loon plot states}
}
\description{
Interactive loon plots from ggplots
}
\examples{
 p <- ggplot(mtcars, aes(wt, mpg)) + geom_point()
 g <- loon.ggplot(p)

 # show ggGuides
 p <- ggplot(mpg, aes(class, hwy)) + geom_boxplot()
 g <- loon.ggplot(p, ggGuides = TRUE)

 # which one is active?
 ## l_hist and l_plot, which one should be the priority?
 den <- density(mtcars$mpg)
 pp <- ggplot(mtcars, aes(x = mpg)) +
   geom_histogram(mapping = aes(y = ..density..)) +
   geom_point(data = data.frame(x = den$x, y = den$y), mapping = aes(x, y))
 pp
 ## check difference
 g <- loon.ggplot(pp)
 suppressWarnings(g <- loon.ggplot(pp, activeGeomLayers = 2))

\dontrun{
## the priority of points layer
df <- data.frame(
  x = rnorm(120, c(0, 2, 4)),
  y = rnorm(120, c(1, 2, 1)),
  z = letters[1:3]
)
df2 <- dplyr::select(df, -z)
pp <- ggplot(df, aes(x, y)) +
 geom_point(data = df2, colour = "grey70") +
 geom_point(aes(colour = z)) +
 facet_wrap(~z)

### check difference
suppressWarnings(g <- loon.ggplot(pp))
g <- loon.ggplot(pp, activeGeomLayers = 2)
suppressWarnings(g <- loon.ggplot(pp, activeGeomLayers = c(1,2)))
}
}

